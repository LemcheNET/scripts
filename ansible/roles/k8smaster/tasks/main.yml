---
- name: Run tasks specific to kubernetes master
  block:
  - name: Set kubernetes master IP address in fact
    tags:
      - set-k8s-master-ip
    set_fact:
      kubernetes_master_ip: "{{ ansible_default_ipv4.address }}"
    delegate_to: "{{ item }}"
    delegate_facts: yes
    with_items: "{{ play_hosts }}"

  - name: Updating forwarding proxy configuration to shell
    tags:
      - update_shell_proxy_env
    become: yes
    lineinfile:
      line: 'no_proxy="{{ no_proxy }},{{ kubernetes_master_ip }}"'
      path: "{{ profile_proxyenv_fqp }}"
      regexp: "^no_proxy="

  - name: Check if master is already initialized
    tags:
      - check_if_initialized
    stat:
      path: /etc/kubernetes/admin.conf
    register: _admin_config

  - block:
    - name: Initializing master (THIS IS GOING TO TAKE A WHILE)
      tags:
        - create_k8s_master
      become: yes
      shell: "{{ kubeadm_init_command[kubernetes_network_solution_name] }}"
      register: _kubeadm_init
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"
        no_proxy: "{{ no_proxy }},{{ kubernetes_master_ip }}"

    - name: Write kubeadm init output to file
      tags:
        - write_kubeadmin_init_output
      become: yes
      lineinfile:
        create: yes
        path: "{{ kubeadm_init_output_fqp }}"
        line: "{{ line }}"
      with_items: "{{ _kubeadm_init.stdout_lines }}"
      loop_control:
        loop_var: line
    when: not _admin_config.stat.exists

  - name: Read kubeadm init output
    tags:
      - read_kubeadm_init_output
    become: yes
    command: "cat {{ kubeadm_init_output_fqp }}"
    register: _kubeadm_init_output

  - name: Register kubeadm join command
    tags:
      - set_kubeadmin_join_cmd
    set_fact:
      kubeadm_join: "{{ item.0 | regex_replace ('^.\\s')}}"
    delegate_to: "{{ item.1 }}"
    delegate_facts: yes
    with_nested:
      - "{{ _kubeadm_init_output.stdout_lines }}"
      - "{{ play_hosts }}"
    when: item.0 | regex_search('kubeadm join')

  - name: "Create user's kubernetes configuration directory"
    tags:
      - create_user_kube_dir
    file:
      path: "{{ ansible_user_dir }}/.kube"
      state: directory

  - name: Copy admin.conf to user configuration directory
    tags:
      - copy_admin_conf
    become: yes
    command: "cp -f /etc/kubernetes/admin.conf {{ ansible_user_dir }}/.kube/config"

  - name: Change permissions of user configuration file
    tags:
      - change_permissions_of_user_conf
    become: yes
    file:
      path: "{{ ansible_user_dir }}/.kube/config"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_real_group_id }}"
      mode: "0640"

  - name: Add KUBECONFIG to .profile
    tags:
      - add_kubeconfig_to_profile
    lineinfile:
      path: "{{ ansible_user_dir }}/.profile"
      line: "export KUBECONFIG=$HOME/.kube/config"
      state: present

  - name: sleep for 300 seconds and continue with play
    wait_for: timeout=300
    delegate_to: localhost

  - name: Retrieve kubectl version
    tags:
      - retrieve_kubectl_version
    shell: kubectl version
    register: _kubectl_version
    when: kubernetes_network_solution_name == "Weave Net"

  - name: "Install {{ kubernetes_network_solution_name }} networking solution for pod networks"
    tags:
      - install_k8s_network
    shell: "kubectl apply -f {{ kubernetes_network_solution_url[kubernetes_network_solution_name] }}"
    environment:
      http_proxy: "{{ http_proxy }}"
      https_proxy: "{{ https_proxy }}"
      no_proxy: "{{ no_proxy }},{{ kubernetes_master_ip }}"

  when: k8s_type == "master"
